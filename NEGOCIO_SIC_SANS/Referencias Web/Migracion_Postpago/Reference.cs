//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.573.
// 
namespace NEGOCIO_SIC_SANS.Migracion_Postpago {

using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ebsMigracionPlanPostpagoSOAP11Binding", Namespace="http://claro.com.pe/eai/ebs/ws/postventa/ebsMigracionPlanPostpago")]
public class ebsMigracionPlanPostpago_ep : System.Web.Services.Protocols.SoapHttpClientProtocol 
{
    
	/// <remarks/>
	public ebsMigracionPlanPostpago_ep() 
	{
		this.Url = "http://localhost/ebsMigracionPlanPostpago_ep";
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ebs/ws/postventa/ebsMigracionPlanPostpago/programarMigrac" +
		 "ion", RequestElementName="programarMigracionPlanRequest", RequestNamespace="http://claro.com.pe/eai/ebs/ws/postventa/ebsMigracionPlanPostpago", ResponseElementName="programarMigracionPlanResponse", ResponseNamespace="http://claro.com.pe/eai/ebs/ws/postventa/ebsMigracionPlanPostpago", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	[return: System.Xml.Serialization.XmlElementAttribute("codigoRespuesta")]
	public string programarMigracion(
		ref string idTransaccion, 
		string ipAplicacion, 
		string aplicacion, 
		string msisdn, 
		string coId, 
		string customerId, 
		string cuenta, 
		string escenario, 
		string tipoProducto, 
		string serviciosAdicionales, 
		string codigoProducto, 
		string codPlanBase, 
		System.Decimal montoApadece, 
		System.Decimal montoFidelizar, 
		string flagValidaApadece, 
		string flagAplicaApadece, 
		string topeConsumo, 
		string tipoTope, 
		string descripcionTipoTpe, 
		string tipoRegistroTope, 
		int topeControlConsumo, 
		[System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaProgramacionTope, 
		string CAC, 
		string asesor, 
		string codigoInteraccion, 
		System.Decimal montoPCS, 
		string areaPCS, 
		string motivoPCS, 
		string subMotivoPCS, 
		int cicloFacturacion, 
		string idTipoCliente, 
		string numeroDocumento, 
		string flagServicioOnTop, 
		[System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaProgramacion, 
		string flagLimiteCredito, 
		string tipoClarify, 
		string numeroCuentaPadre, 
		string usuarioAplicacion, 
		string usuarioSistema, 
		out string mensajeRespuesta) 
	{
		object[] results = this.Invoke("programarMigracion", new object[] {
																			  idTransaccion,
																			  ipAplicacion,
																			  aplicacion,
																			  msisdn,
																			  coId,
																			  customerId,
																			  cuenta,
																			  escenario,
																			  tipoProducto,
																			  serviciosAdicionales,
																			  codigoProducto,
																			  codPlanBase,
																			  montoApadece,
																			  montoFidelizar,
																			  flagValidaApadece,
																			  flagAplicaApadece,
																			  topeConsumo,
																			  tipoTope,
																			  descripcionTipoTpe,
																			  tipoRegistroTope,
																			  topeControlConsumo,
																			  fechaProgramacionTope,
																			  CAC,
																			  asesor,
																			  codigoInteraccion,
																			  montoPCS,
																			  areaPCS,
																			  motivoPCS,
																			  subMotivoPCS,
																			  cicloFacturacion,
																			  idTipoCliente,
																			  numeroDocumento,
																			  flagServicioOnTop,
																			  fechaProgramacion,
																			  flagLimiteCredito,
																			  tipoClarify,
																			  numeroCuentaPadre,
																			  usuarioAplicacion,
																			  usuarioSistema});
		idTransaccion = ((string)(results[1]));
		mensajeRespuesta = ((string)(results[2]));
		return ((string)(results[0]));
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginprogramarMigracion(
		string idTransaccion, 
		string ipAplicacion, 
		string aplicacion, 
		string msisdn, 
		string coId, 
		string customerId, 
		string cuenta, 
		string escenario, 
		string tipoProducto, 
		string serviciosAdicionales, 
		string codigoProducto, 
		string codPlanBase, 
		System.Decimal montoApadece, 
		System.Decimal montoFidelizar, 
		string flagValidaApadece, 
		string flagAplicaApadece, 
		string topeConsumo, 
		string tipoTope, 
		string descripcionTipoTpe, 
		string tipoRegistroTope, 
		int topeControlConsumo, 
		System.DateTime fechaProgramacionTope, 
		string CAC, 
		string asesor, 
		string codigoInteraccion, 
		System.Decimal montoPCS, 
		string areaPCS, 
		string motivoPCS, 
		string subMotivoPCS, 
		int cicloFacturacion, 
		string idTipoCliente, 
		string numeroDocumento, 
		string flagServicioOnTop, 
		System.DateTime fechaProgramacion, 
		string flagLimiteCredito, 
		string tipoClarify, 
		string numeroCuentaPadre, 
		string usuarioAplicacion, 
		string usuarioSistema, 
		System.AsyncCallback callback, 
		object asyncState) 
	{
		return this.BeginInvoke("programarMigracion", new object[] {
																	   idTransaccion,
																	   ipAplicacion,
																	   aplicacion,
																	   msisdn,
																	   coId,
																	   customerId,
																	   cuenta,
																	   escenario,
																	   tipoProducto,
																	   serviciosAdicionales,
																	   codigoProducto,
																	   codPlanBase,
																	   montoApadece,
																	   montoFidelizar,
																	   flagValidaApadece,
																	   flagAplicaApadece,
																	   topeConsumo,
																	   tipoTope,
																	   descripcionTipoTpe,
																	   tipoRegistroTope,
																	   topeControlConsumo,
																	   fechaProgramacionTope,
																	   CAC,
																	   asesor,
																	   codigoInteraccion,
																	   montoPCS,
																	   areaPCS,
																	   motivoPCS,
																	   subMotivoPCS,
																	   cicloFacturacion,
																	   idTipoCliente,
																	   numeroDocumento,
																	   flagServicioOnTop,
																	   fechaProgramacion,
																	   flagLimiteCredito,
																	   tipoClarify,
																	   numeroCuentaPadre,
																	   usuarioAplicacion,
																	   usuarioSistema}, callback, asyncState);
	}
    
	/// <remarks/>
	public string EndprogramarMigracion(System.IAsyncResult asyncResult, out string idTransaccion, out string mensajeRespuesta) 
	{
		object[] results = this.EndInvoke(asyncResult);
		idTransaccion = ((string)(results[1]));
		mensajeRespuesta = ((string)(results[2]));
		return ((string)(results[0]));
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ebs/ws/postventa/ebsMigracionPlanPostpago/realizarMigraci" +
		 "on", RequestElementName="realizarMigracionPlanRequest", RequestNamespace="http://claro.com.pe/eai/ebs/ws/postventa/ebsMigracionPlanPostpago", ResponseElementName="realizarMigracionPlanResponse", ResponseNamespace="http://claro.com.pe/eai/ebs/ws/postventa/ebsMigracionPlanPostpago", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	[return: System.Xml.Serialization.XmlElementAttribute("codigoRespuesta")]
	public string realizarMigracion(
		string idTransaccionProceso, 
		ref string idTransaccion, 
		string ipAplicacion, 
		string aplicacion, 
		string msisdn, 
		string coId, 
		string customerId, 
		string cuenta, 
		string escenario, 
		string ipoProducto, 
		string serviciosAdicionales, 
		string codigoProducto, 
		System.Single montoApadece, 
		System.Single montoFidelizar, 
		string flagValidaApadece, 
		string flagAplicaApadece, 
		string topeConsumo, 
		string tipoTope, 
		string descripcionTipoTpe, 
		string tipoRegistroTope, 
		int topeControlConsumo, 
		[System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaProgramacionTope, 
		string CAC, 
		string asesor, 
		string codigoInteraccion, 
		System.Single montoPCS, 
		string areaPCS, 
		string motivoPCS, 
		string subMotivoPCS, 
		int cicloFacturacion, 
		string idTipoCliente, 
		string numeroDocumento, 
		string flagServicioOnTop, 
		[System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaProgramacion, 
		string flagLimiteCredito, 
		string tipoClarify, 
		string numeroCuentaPadre, 
		string usuarioAplicacion, 
		string usuarioSistema, 
		out string mensajeRespuesta) 
	{
		object[] results = this.Invoke("realizarMigracion", new object[] {
																			 idTransaccionProceso,
																			 idTransaccion,
																			 ipAplicacion,
																			 aplicacion,
																			 msisdn,
																			 coId,
																			 customerId,
																			 cuenta,
																			 escenario,
																			 ipoProducto,
																			 serviciosAdicionales,
																			 codigoProducto,
																			 montoApadece,
																			 montoFidelizar,
																			 flagValidaApadece,
																			 flagAplicaApadece,
																			 topeConsumo,
																			 tipoTope,
																			 descripcionTipoTpe,
																			 tipoRegistroTope,
																			 topeControlConsumo,
																			 fechaProgramacionTope,
																			 CAC,
																			 asesor,
																			 codigoInteraccion,
																			 montoPCS,
																			 areaPCS,
																			 motivoPCS,
																			 subMotivoPCS,
																			 cicloFacturacion,
																			 idTipoCliente,
																			 numeroDocumento,
																			 flagServicioOnTop,
																			 fechaProgramacion,
																			 flagLimiteCredito,
																			 tipoClarify,
																			 numeroCuentaPadre,
																			 usuarioAplicacion,
																			 usuarioSistema});
		idTransaccion = ((string)(results[1]));
		mensajeRespuesta = ((string)(results[2]));
		return ((string)(results[0]));
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginrealizarMigracion(
		string idTransaccionProceso, 
		string idTransaccion, 
		string ipAplicacion, 
		string aplicacion, 
		string msisdn, 
		string coId, 
		string customerId, 
		string cuenta, 
		string escenario, 
		string ipoProducto, 
		string serviciosAdicionales, 
		string codigoProducto, 
		System.Single montoApadece, 
		System.Single montoFidelizar, 
		string flagValidaApadece, 
		string flagAplicaApadece, 
		string topeConsumo, 
		string tipoTope, 
		string descripcionTipoTpe, 
		string tipoRegistroTope, 
		int topeControlConsumo, 
		System.DateTime fechaProgramacionTope, 
		string CAC, 
		string asesor, 
		string codigoInteraccion, 
		System.Single montoPCS, 
		string areaPCS, 
		string motivoPCS, 
		string subMotivoPCS, 
		int cicloFacturacion, 
		string idTipoCliente, 
		string numeroDocumento, 
		string flagServicioOnTop, 
		System.DateTime fechaProgramacion, 
		string flagLimiteCredito, 
		string tipoClarify, 
		string numeroCuentaPadre, 
		string usuarioAplicacion, 
		string usuarioSistema, 
		System.AsyncCallback callback, 
		object asyncState) 
	{
		return this.BeginInvoke("realizarMigracion", new object[] {
																	  idTransaccionProceso,
																	  idTransaccion,
																	  ipAplicacion,
																	  aplicacion,
																	  msisdn,
																	  coId,
																	  customerId,
																	  cuenta,
																	  escenario,
																	  ipoProducto,
																	  serviciosAdicionales,
																	  codigoProducto,
																	  montoApadece,
																	  montoFidelizar,
																	  flagValidaApadece,
																	  flagAplicaApadece,
																	  topeConsumo,
																	  tipoTope,
																	  descripcionTipoTpe,
																	  tipoRegistroTope,
																	  topeControlConsumo,
																	  fechaProgramacionTope,
																	  CAC,
																	  asesor,
																	  codigoInteraccion,
																	  montoPCS,
																	  areaPCS,
																	  motivoPCS,
																	  subMotivoPCS,
																	  cicloFacturacion,
																	  idTipoCliente,
																	  numeroDocumento,
																	  flagServicioOnTop,
																	  fechaProgramacion,
																	  flagLimiteCredito,
																	  tipoClarify,
																	  numeroCuentaPadre,
																	  usuarioAplicacion,
																	  usuarioSistema}, callback, asyncState);
	}
    
	/// <remarks/>
	public string EndrealizarMigracion(System.IAsyncResult asyncResult, out string idTransaccion, out string mensajeRespuesta) 
	{
		object[] results = this.EndInvoke(asyncResult);
		idTransaccion = ((string)(results[1]));
		mensajeRespuesta = ((string)(results[2]));
		return ((string)(results[0]));
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ebs/ws/postventa/ebsMigracionPlanPostpago/procesarProgram" +
		 "acion", RequestElementName="ProcesarProgramacionMigracionPlanRequest", RequestNamespace="http://claro.com.pe/eai/ebs/ws/postventa/ebsMigracionPlanPostpago", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public void procesarProgramacion(string idTransaccion, string ipAplicacion, string aplicacion, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaEjecucion) 
	{
		this.Invoke("procesarProgramacion", new object[] {
															 idTransaccion,
															 ipAplicacion,
															 aplicacion,
															 fechaEjecucion});
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginprocesarProgramacion(string idTransaccion, string ipAplicacion, string aplicacion, System.DateTime fechaEjecucion, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("procesarProgramacion", new object[] {
																		 idTransaccion,
																		 ipAplicacion,
																		 aplicacion,
																		 fechaEjecucion}, callback, asyncState);
	}
    
	/// <remarks/>
	public void EndprocesarProgramacion(System.IAsyncResult asyncResult) 
	{
		this.EndInvoke(asyncResult);
	}
    
	/// <remarks/>
	[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ebs/ws/postventa/ebsMigracionPlanPostpago/relanzarProgram" +
		 "acionMigraciones", RequestElementName="RelanzarProgramacionMigracionPlanRequest", RequestNamespace="http://claro.com.pe/eai/ebs/ws/postventa/ebsMigracionPlanPostpago", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
	public void relanzarProgramacionMigraciones(string idTransaccion, string ipAplicacion, string aplicacion, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaEjecucion) 
	{
		this.Invoke("relanzarProgramacionMigraciones", new object[] {
																		idTransaccion,
																		ipAplicacion,
																		aplicacion,
																		fechaEjecucion});
	}
    
	/// <remarks/>
	public System.IAsyncResult BeginrelanzarProgramacionMigraciones(string idTransaccion, string ipAplicacion, string aplicacion, System.DateTime fechaEjecucion, System.AsyncCallback callback, object asyncState) 
	{
		return this.BeginInvoke("relanzarProgramacionMigraciones", new object[] {
																					idTransaccion,
																					ipAplicacion,
																					aplicacion,
																					fechaEjecucion}, callback, asyncState);
	}
    
	/// <remarks/>
	public void EndrelanzarProgramacionMigraciones(System.IAsyncResult asyncResult) 
	{
		this.EndInvoke(asyncResult);
	}
}
	}
